// Homework – CS/IS 135 – 1050/51 - Lab - Chapter 2
// Author: Matthew Boliard
// Created 8 Jan 2020, Last Revised 11 Jan 2020
// Program determines the least number of quarters, dimes, nickels and pennies needed to 
// make up a user determined total value.  

#include <iostream>
#include <cmath>
using namespace std;

int main()
{
    // set up the variables for use
    int varTemp, varQ, varD, varN, varP, varNumCoins;
    int varQones, varQtenths, varQhundredths;
    int varNhundredths;
    int varTemp2, varTemp2ones, varTemp2tenths, varTemp2hundredths;
    double varInputTotalValue, varTemp1, EPSILON;
    bool isInputOK;
    isInputOK = 0; // set the boolean variable as false
    EPSILON = 0.000000001;

    // display a request for input of the total value, then get the total value 
    // as a double precision floating point variable 
    cout << "Please type in the total value in dollars, for example $1.32. \n";

    // create loop to get correct form of input
    while (isInputOK == 0) // do this loop while the boolean variable is false
    {
        cout << "Input the total value: $";
        cin >> varInputTotalValue;

        // check if the input contained fractional pennies
        varTemp = varInputTotalValue * 100;
        varTemp1 = ((varInputTotalValue * 100) - varTemp);

        if (abs(varTemp1) > EPSILON)
            // ring alarm and note error
            cout << "\a\a\a\aWARNING! Your input cannot include fractional amounts less than hundredths!\n";
        else
            isInputOK = 1; // set boolean variable to true and end loop
    }

    // convert the input into an integer
    varTemp = varInputTotalValue * 100;

    // calculate the number of whole quarters contained in the total value
    varQ = varTemp / 25;
    // set the temp variable to the modulus (remainder)
    varTemp = varTemp % 25;

    // calculate the number of whole dimes contained in the remainder
    varD = varTemp / 10;
    // set the temp variable to the modulus (remainder)
    varTemp = varTemp % 10;

    // calculate the number of whole nickels contained in the remainder
    varN = varTemp / 5;
    // set the number of whole pennies equal to the modulus (remainder)
    varP = varTemp % 5;

    // calculate the total number of coins
    varNumCoins = varQ + varD + varN + varP;
    // calculate the total value of the coins
    varTemp2 = ((varQ * 25) + (varD * 10) + (varN * 5) + varP);

    // calculate the ones, tenths, and hundredths digits for total value
    varTemp2ones = (varTemp2/100);
    varTemp2tenths = (varTemp2/10) - (varTemp2ones * 10);
    varTemp2hundredths = (varTemp2 - ((varTemp2ones * 100) + (varTemp2tenths * 10)));

    // calculate the ones, tenths, and hundredths digits for Quarters subtotal
    varQones = (varQ * .25);
    varQtenths = (varQ * 2.5) - (varQones * 10);
    varQhundredths = ((varQ * 25) - (varQones * 100) - (varQtenths * 10));
    // dimes will always be varD and cannot be more than 2 coins
    // calculate the digits for nickels - can never be more than 1 coin
    varNhundredths = varN * 5;
    // pennies will always be varP - can never be more than 4 coins

    // print out the total number of coins and table
    cout<< "\n"
        << "The total number of coins is: " << varNumCoins << endl
        << "\n"
        << "Type\t\t\tNumber\t\tSubtotal\n" << endl
        << "Quarters:\t\t" << varQ << "\t\t$ " << varQones << "." << varQtenths << varQhundredths << endl
        << "Dimes:\t\t\t" << varD << "\t\t$ " << "0." << varD << "0" << endl
        << "Nickels:\t\t" << varN << "\t\t$ " << "0.0" << varNhundredths << endl
        << "Pennies:\t\t" << varP << "\t\t$ " << "0.0" << varP << endl
        << "\n\t\tGrand Total:\t\t$ " << varTemp2ones << "." << varTemp2tenths << varTemp2hundredths << endl;

    return 0;
}
